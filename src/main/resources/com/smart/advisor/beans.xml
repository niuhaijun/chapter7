<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns:p="http://www.springframework.org/schema/p"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns="http://www.springframework.org/schema/beans"
  xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-4.0.xsd">

  <!-- 普通方法名匹配切面 -->
  <bean class="com.smart.advisor.Waiter" id="waiterTarget"/>
  <bean class="com.smart.advisor.Seller" id="sellerTarget"/>
  <bean class="com.smart.advisor.GreetingBeforeAdvice" id="greetingAdvice"/>
  <bean class="com.smart.advisor.GreetingAdvisor" id="greetingAdvisor"
    p:advice-ref="greetingAdvice"/>

  <bean abstract="true" class="org.springframework.aop.framework.ProxyFactoryBean"
    id="parent"
    p:interceptorNames="greetingAdvisor" p:proxyTargetClass="true"/>
  <bean id="waiter" parent="parent" p:target-ref="waiterTarget"/>
  <bean id="seller" parent="parent" p:target-ref="sellerTarget"/>


  <!-- 正则表达式方法名匹配切面 -->
  <bean class="org.springframework.aop.support.RegexpMethodPointcutAdvisor"
    id="regexpAdvisor"
    p:advice-ref="greetingAdvice">
    <property name="patterns">
      <list>
        <value>.*greet.*</value>
      </list>
    </property>
  </bean>
  <bean class="org.springframework.aop.framework.ProxyFactoryBean" id="waiter1"
    p:interceptorNames="regexpAdvisor" p:proxyTargetClass="true"
    p:target-ref="waiterTarget"/>


  <!-- 动态切面 -->
  <bean class="org.springframework.aop.support.DefaultPointcutAdvisor" id="dynamicAdvisor">
    <property name="pointcut">
      <bean class="com.smart.advisor.GreetingDynamicPointcut"/>
    </property>
    <property name="advice">
      <bean class="com.smart.advisor.GreetingBeforeAdvice"/>
    </property>
  </bean>


  <bean class="org.springframework.aop.framework.ProxyFactoryBean" id="waiter2"
    p:interceptorNames="dynamicAdvisor" p:proxyTargetClass="true"
    p:target-ref="waiterTarget"/>

  <!-- 控制流程切面 -->
  <bean class="org.springframework.aop.support.ControlFlowPointcut" id="controlFlowPointcut">
    <constructor-arg type="java.lang.Class"
      value="com.smart.advisor.WaiterDelegate"/>
    <constructor-arg type="java.lang.String" value="service"/>
  </bean>
  <bean class="org.springframework.aop.support.DefaultPointcutAdvisor" id="controlFlowAdvisor"
    p:advice-ref="greetingAdvice" p:pointcut-ref="controlFlowPointcut"/>
  <bean class="org.springframework.aop.framework.ProxyFactoryBean" id="waiter3"
    p:interceptorNames="controlFlowAdvisor" p:proxyTargetClass="true"
    p:target-ref="waiterTarget"/>

  <!-- 复合切点切面 -->
  <bean class="com.smart.advisor.GreetingComposablePointcut" id="gcp"/>
  <bean class="org.springframework.aop.support.DefaultPointcutAdvisor" id="composableAdvisor"
    p:advice-ref="greetingAdvice" p:pointcut="#{gcp.intersectionPointcut}"/>
  <bean class="org.springframework.aop.framework.ProxyFactoryBean" id="waiter4"
    p:interceptorNames="composableAdvisor" p:proxyTargetClass="true"
    p:target-ref="waiterTarget"/>

  <!--引入切面-->
  <bean class="org.springframework.aop.support.DefaultIntroductionAdvisor"
    id="introduceAdvisor">
    <constructor-arg>
      <bean class="com.smart.introduce.ControllablePerformaceMonitor"/>
    </constructor-arg>
  </bean>
  <bean class="com.smart.introduce.ForumService" id="forumServiceTarget"/>
  <bean class="org.springframework.aop.framework.ProxyFactoryBean" id="forumService"
    p:interceptorNames="introduceAdvisor"
    p:proxyTargetClass="true"
    p:target-ref="forumServiceTarget"/>
</beans>
